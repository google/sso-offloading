name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup PNPM
      uses: pnpm/action-setup@v3
      with:
        version: 8

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        cache-dependency-path: pnpm-lock.yaml

    - name: Install dependencies
      run: pnpm install

    - name: Build
      run: pnpm run build

    # - name: Unit test
      # run: pnpm run test

    - name: Build IWA example
      run: pnpm run build:iwa
      env: 
        KEY: ${{ secrets.IWA_KEY }}
        KEY_PASSPHRASE: ${{ secrets.IWA_KEY_PASSPHRASE }}

    - name: Get IWA version
      id: iwa_version
      run: |
        VERSION=$(jq -r .version examples/simple-iwa-example/public/.well-known/manifest.webmanifest)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Upload IWA Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: iwa-dev-build-${{ steps.iwa_version.outputs.version }}
        path: examples/simple-iwa-example/dist/simple-iwa-example.swbn
        overwrite: true

    - name: Build Chrome App example
      run: pnpm run build:chrome-app

    - name: Install Google Chrome
      uses: browser-actions/setup-chrome@v1

    - name: Package Chrome App into .crx
      id: crx_package
      run: |
        echo "${{ secrets.CHROME_APP_KEY }}" > key.pem
        google-chrome --pack-extension=examples/chrome-app-example/chrome-app --pack-extension-key=key.pem
        CRX_PATH="examples/chrome-app-example/chrome-app.crx"
        if [ -f "$CRX_PATH" ]; then
          mv "$CRX_PATH" "chrome-app-${{ steps.app_version.outputs.version }}.crx"
          echo "crx_name=chrome-app-${{ steps.app_version.outputs.version }}.crx" >> $GITHUB_OUTPUT
        else
          echo "CRX file not found at $CRX_PATH"
          exit 1
        fi

    - name: Upload Chrome App .crx Artifact
      uses: actions/upload-artifact@v4
      with:
        name: chrome-app-build-${{ steps.app_version.outputs.version }}
        path: ${{ steps.crx_package.outputs.crx_name }}
        retention-days: 7
        overwrite: true