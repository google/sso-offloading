# Copyright 2025 Google LLC

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#       https://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Package Chrome CRX'
description: 'Packages a directory into a signed .crx file and calculates its ID.'

inputs:
  key:
    description: 'The private key for signing the .crx file.'
    required: true
  input-dir:
    description: 'The path to the directory to be packaged.'
    required: true
  version:
    description: 'The version string to use in the output file name.'
    required: true
  base-name:
    description: 'The base name for the output .crx file (e.g., "my-extension").'
    required: true

outputs:
  crx-id:
    description: 'The calculated ID of the packaged extension/app.'
    value: ${{ steps.package.outputs.id }}
  crx-name:
    description: 'The final, versioned name of the created .crx file.'
    value: ${{ steps.package.outputs.name }}

runs:
  using: 'composite'
  steps:
    - id: package
      shell: bash
      run: |
        echo "Packaging ${{ inputs.base-name }} from directory: ${{ inputs.input-dir }}"
        echo "${{ inputs.key }}" > key.pem

        google-chrome --pack-extension=${{ inputs.input-dir }} --pack-extension-key=key.pem

        # Calculate ID
        CRX_ID=$(openssl rsa -in key.pem -pubout -outform DER | sha256sum | head -c 32 | tr 0123456789abcdef abcdefghijklmnop)
        echo "Calculated ID: $CRX_ID"
        echo "id=$CRX_ID" >> $GITHUB_OUTPUT

        EXPECTED_CRX_PATH="${{ inputs.input-dir }}.crx"

        if [ -f "$EXPECTED_CRX_PATH" ]; then
          VERSIONED_CRX_NAME="${{ inputs.base-name }}-${{ inputs.version }}.crx"
          mv "$EXPECTED_CRX_PATH" "$VERSIONED_CRX_NAME"
          echo "Created CRX: $VERSIONED_CRX_NAME"
          echo "name=$VERSIONED_CRX_NAME" >> $GITHUB_OUTPUT
        else
          echo "CRX file not found at $EXPECTED_CRX_PATH"
          exit 1
        fi